 #! 1<<n => 2^n
#! 向左位移多少表示*2多少次方
#? 右移表示除2

#! 2. 位运算的技巧

#? 2.1 判断奇偶性
# 如果这个数字是奇数，那么它的二进制最后一位一定是1
# 直接通过 x & 1 取得最后一位

#? 2.2 求出x二进制的第i位
# 获取第0位 => x & 1
# 获取第i位 => (x>>i) & 1 -> 右移i位

x = 5 # 0101
print(x & 1 == 1)
print((x >> 2) & 1)

#? 2.3 把二进制的第i位设置为 1：
# x | (1 << i) 
#? 2.4 把二进制的第i位设置为 0：
# x | ~(1 << i)
print(x | (1 << 1)) # 0101 => 0111
print(x | ~(1 << 2)) # 0101 | (1011) => 1001 = -1

#! 通过异或运算计算序列中唯一出现次数为奇数的数字
# 什么数字异或自己都会被消去, 没有被消去的数字就是唯一那个出现次数为奇数的数